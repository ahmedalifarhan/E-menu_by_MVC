@model ProF.Models.item

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>
<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>item</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.item_Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.item_Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.item_Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.item_Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.item_Cost)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.item_Cost)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.item_image)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.item_image)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.login_admin)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.login_admin.admin_id)
        </dd>


    </dl>

    <form asp-action="Delete" method="post">
        <input type="hidden" asp-for="item_id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |

    </form>
    <a asp-action="ADD">Back to List</a>
</div>

<script>

    let timeoutId;

    function resetTimer() {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(function () {
            window.location.href = "/admin/login_admin";
        }, 300000); // 5 seconds
    }

    // تم استدعاء resetTimer عند تحريك الماوس أو الضغط على أي مفتاح
    document.addEventListener("mousemove", resetTimer);
    document.addEventListener("keypress", resetTimer);

    // يمكن أيضًا استدعاء resetTimer مباشرةً عند بدء التحميل لصفحة ال welcome
    resetTimer();
</script>
